{"ast":null,"code":"import { fetchToken } from '../Services/api';\nconst ACTIONS = {\n  SET_USER: 'SET_USER',\n  SET_TRIVIA: 'SET_TRIVIA',\n  GET_TOKEN: 'GET_TOKEN',\n  GET_TOKEN_SUCCESS: 'GET_TOKEN_SUCCESS',\n  GET_TOKEN_ERROR: 'GET_TOKEN_ERROR',\n  SHOW_BUTTON: 'SHOW_BUTTON',\n  CLEAR_STATE: 'CLEAR_STATE'\n};\nexport const setUser = payload => ({\n  type: ACTIONS.SET_USER,\n  payload\n});\nexport const setTrivia = payload => ({\n  type: ACTIONS.SET_TRIVIA,\n  payload\n});\nexport const clearState = () => ({\n  type: ACTIONS.CLEAR_STATE\n});\nexport const showButton = payload => ({\n  type: ACTIONS.SHOW_BUTTON,\n  payload\n});\nexport const getToken = () => ({\n  type: ACTIONS.GET_TOKEN\n});\nexport const getTokenSuccess = payload => ({\n  type: ACTIONS.GET_TOKEN_SUCCESS,\n  payload\n});\nexport const getTokenApi = () => async dispatch => {\n  dispatch(getToken());\n  const response = await fetchToken();\n  dispatch(getTokenSuccess(response.token));\n};\nexport default ACTIONS;","map":{"version":3,"sources":["/home/bamberg/Trivia-Redux/src/Actions/index.js"],"names":["fetchToken","ACTIONS","SET_USER","SET_TRIVIA","GET_TOKEN","GET_TOKEN_SUCCESS","GET_TOKEN_ERROR","SHOW_BUTTON","CLEAR_STATE","setUser","payload","type","setTrivia","clearState","showButton","getToken","getTokenSuccess","getTokenApi","dispatch","response","token"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,UADI;AAEdC,EAAAA,UAAU,EAAE,YAFE;AAGdC,EAAAA,SAAS,EAAE,WAHG;AAIdC,EAAAA,iBAAiB,EAAE,mBAJL;AAKdC,EAAAA,eAAe,EAAE,iBALH;AAMdC,EAAAA,WAAW,EAAE,aANC;AAOdC,EAAAA,WAAW,EAAE;AAPC,CAAhB;AAUA,OAAO,MAAMC,OAAO,GAAIC,OAAD,KAAc;AACnCC,EAAAA,IAAI,EAAEV,OAAO,CAACC,QADqB;AAEnCQ,EAAAA;AAFmC,CAAd,CAAhB;AAKP,OAAO,MAAME,SAAS,GAAIF,OAAD,KAAc;AACrCC,EAAAA,IAAI,EAAEV,OAAO,CAACE,UADuB;AAErCO,EAAAA;AAFqC,CAAd,CAAlB;AAKP,OAAO,MAAMG,UAAU,GAAG,OAAO;AAC/BF,EAAAA,IAAI,EAAEV,OAAO,CAACO;AADiB,CAAP,CAAnB;AAIP,OAAO,MAAMM,UAAU,GAAIJ,OAAD,KAAc;AACtCC,EAAAA,IAAI,EAAEV,OAAO,CAACM,WADwB;AAEtCG,EAAAA;AAFsC,CAAd,CAAnB;AAKP,OAAO,MAAMK,QAAQ,GAAG,OAAO;AAC7BJ,EAAAA,IAAI,EAAEV,OAAO,CAACG;AADe,CAAP,CAAjB;AAIP,OAAO,MAAMY,eAAe,GAAIN,OAAD,KAAc;AAC3CC,EAAAA,IAAI,EAAEV,OAAO,CAACI,iBAD6B;AACVK,EAAAA;AADU,CAAd,CAAxB;AAIP,OAAO,MAAMO,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AAEA,QAAMI,QAAQ,GAAG,MAAMnB,UAAU,EAAjC;AAEAkB,EAAAA,QAAQ,CAACF,eAAe,CAACG,QAAQ,CAACC,KAAV,CAAhB,CAAR;AACD,CANM;AAQP,eAAenB,OAAf","sourcesContent":["import { fetchToken } from '../Services/api';\n\nconst ACTIONS = {\n  SET_USER: 'SET_USER',\n  SET_TRIVIA: 'SET_TRIVIA',\n  GET_TOKEN: 'GET_TOKEN',\n  GET_TOKEN_SUCCESS: 'GET_TOKEN_SUCCESS',\n  GET_TOKEN_ERROR: 'GET_TOKEN_ERROR',\n  SHOW_BUTTON: 'SHOW_BUTTON',\n  CLEAR_STATE: 'CLEAR_STATE',\n};\n\nexport const setUser = (payload) => ({\n  type: ACTIONS.SET_USER,\n  payload,\n});\n\nexport const setTrivia = (payload) => ({\n  type: ACTIONS.SET_TRIVIA,\n  payload,\n});\n\nexport const clearState = () => ({\n  type: ACTIONS.CLEAR_STATE,\n});\n\nexport const showButton = (payload) => ({\n  type: ACTIONS.SHOW_BUTTON,\n  payload,\n});\n\nexport const getToken = () => ({\n  type: ACTIONS.GET_TOKEN,\n});\n\nexport const getTokenSuccess = (payload) => ({\n  type: ACTIONS.GET_TOKEN_SUCCESS, payload,\n});\n\nexport const getTokenApi = () => async (dispatch) => {\n  dispatch(getToken());\n\n  const response = await fetchToken();\n\n  dispatch(getTokenSuccess(response.token));\n};\n\nexport default ACTIONS;\n"]},"metadata":{},"sourceType":"module"}