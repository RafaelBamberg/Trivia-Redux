{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/Trivia-Redux/src/Pages/Feedback.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../Components/Header';\nimport { clearState as cleaner } from '../Actions';\n\nclass Feedback extends React.Component {\n  handlePlayAgainBtn() {\n    const _this$props = this.props,\n          history = _this$props.history,\n          clearState = _this$props.clearState;\n    clearState();\n    history.push('/');\n  }\n\n  handleRankingBtn() {\n    const history = this.props.history;\n    history.push('/ranking');\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          assertions = _this$props2.assertions,\n          points = _this$props2.points;\n    const standardValue = 3;\n    const message = assertions < standardValue ? 'Podia ser melhor...' : 'Mandou bem!';\n    return React.createElement(\"div\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, message), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, points), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, assertions), React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: this.handlePlayAgainBtn.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Jogar novamente\"), React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      onClick: this.handleRankingBtn.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Ver ranking\")));\n  }\n\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  assertions: PropTypes.number.isRequired,\n  points: PropTypes.number.isRequired,\n  clearState: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({\n  trivia: {\n    assertions,\n    points\n  }\n}) => ({\n  assertions,\n  points\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearState: () => dispatch(cleaner())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);","map":{"version":3,"sources":["/home/bamberg/Trivia-Redux/src/Pages/Feedback.js"],"names":["React","PropTypes","connect","Header","clearState","cleaner","Feedback","Component","handlePlayAgainBtn","props","history","push","handleRankingBtn","render","assertions","points","standardValue","message","bind","propTypes","shape","func","isRequired","number","mapStateToProps","trivia","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAU,IAAIC,OAAvB,QAAsC,YAAtC;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrCC,EAAAA,kBAAkB,GAAG;AAAA,wBACa,KAAKC,KADlB;AAAA,UACXC,OADW,eACXA,OADW;AAAA,UACFN,UADE,eACFA,UADE;AAGnBA,IAAAA,UAAU;AACVM,IAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD;;AAEDC,EAAAA,gBAAgB,GAAG;AAAA,UACTF,OADS,GACG,KAAKD,KADR,CACTC,OADS;AAGjBA,IAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,yBACwB,KAAKJ,KAD7B;AAAA,UACCK,UADD,gBACCA,UADD;AAAA,UACaC,MADb,gBACaA,MADb;AAEP,UAAMC,aAAa,GAAG,CAAtB;AACA,UAAMC,OAAO,GAAGH,UAAU,GAAGE,aAAb,GAA6B,qBAA7B,GAAqD,aAArE;AAEA,WACE;AAAK,qBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCC,OAAjC,CADF,EAEE;AAAG,qBAAY,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCF,MAAxC,CAFF,EAGE;AAAG,qBAAY,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CD,UAA3C,CAHF,EAIE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,gBAFd;AAGE,MAAA,OAAO,EAAG,KAAKN,kBAAL,CAAwBU,IAAxB,CAA6B,IAA7B,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAWE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,aAFd;AAGE,MAAA,OAAO,EAAG,KAAKN,gBAAL,CAAsBM,IAAtB,CAA2B,IAA3B,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,CAFF,CADF;AAwBD;;AA3CoC;;AA8CvCZ,QAAQ,CAACa,SAAT,GAAqB;AACnBT,EAAAA,OAAO,EAAET,SAAS,CAACmB,KAAV,CAAgB;AACvBT,IAAAA,IAAI,EAAEV,SAAS,CAACoB;AADO,GAAhB,EAENC,UAHgB;AAInBR,EAAAA,UAAU,EAAEb,SAAS,CAACsB,MAAV,CAAiBD,UAJV;AAKnBP,EAAAA,MAAM,EAAEd,SAAS,CAACsB,MAAV,CAAiBD,UALN;AAMnBlB,EAAAA,UAAU,EAAEH,SAAS,CAACoB,IAAV,CAAeC;AANR,CAArB;;AASA,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEX,IAAAA,UAAF;AAAcC,IAAAA;AAAd;AAAV,CAAD,MAAyC;AAC/DD,EAAAA,UAD+D;AAE/DC,EAAAA;AAF+D,CAAzC,CAAxB;;AAKA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,UAAU,EAAE,MAAMuB,QAAQ,CAACtB,OAAO,EAAR;AADc,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../Components/Header';\nimport { clearState as cleaner } from '../Actions';\n\nclass Feedback extends React.Component {\n  handlePlayAgainBtn() {\n    const { history, clearState } = this.props;\n\n    clearState();\n    history.push('/');\n  }\n\n  handleRankingBtn() {\n    const { history } = this.props;\n\n    history.push('/ranking');\n  }\n\n  render() {\n    const { assertions, points } = this.props;\n    const standardValue = 3;\n    const message = assertions < standardValue ? 'Podia ser melhor...' : 'Mandou bem!';\n\n    return (\n      <div data-testid=\"feedback-text\">\n        <Header />\n        <main>\n          <p data-testid=\"feedback-text\">{ message }</p>\n          <p data-testid=\"feedback-total-score\">{ points }</p>\n          <p data-testid=\"feedback-total-question\">{ assertions }</p>\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ this.handlePlayAgainBtn.bind(this) }\n          >\n            Jogar novamente\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ this.handleRankingBtn.bind(this) }\n          >\n            Ver ranking\n          </button>\n        </main>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  assertions: PropTypes.number.isRequired,\n  points: PropTypes.number.isRequired,\n  clearState: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ trivia: { assertions, points } }) => ({\n  assertions,\n  points,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearState: () => dispatch(cleaner()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}